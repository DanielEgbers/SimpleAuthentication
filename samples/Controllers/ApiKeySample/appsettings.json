{
    "Authentication": {
        "DefaultScheme": "ApiKey", // Optional
        "ApiKey": {
            "SchemeName": "ApiKey", // Default: ApiKey
            // You can specify either HeaderName, QueryStringKey or both
            "HeaderName": "x-api-key",
            "QueryStringKey": "code",
            //"NameClaimType": "user_name", // Default: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
            //"RoleClaimType": "user_role", // Default: http://schemas.microsoft.com/ws/2008/06/identity/claims/role
            // You can set a fixed API Key for authentication. If you have a single value, you can just use the plain property:
            "ApiKeyValue": "f1I7S5GXa4wQDgLQWgz0",
            "UserName": "ApiUser", // Required if ApiKeyValue is used
            "Roles": [ "Administrator" ],
            // Otherwise, you can create an array of ApiKeys:
            "ApiKeys": [
                {
                    "Value": "ArAilHVOoL3upX78Cohq",
                    "UserName": "alice",
                    "Roles": [ "Administrator", "User" ]
                },
                {
                    "Value": "DiUU5EqImTYkxPDAxBVS",
                    "UserName": "bob",
                    "Roles": [ "User" ]
                }
            ]
            // You can also combine both declarations.
            // If, instead, you don't have fixed API keys for authentication, you can omit all these properties and
            // register an IApiKeyValidator implementation that will be used to validate the keys.
        }
    },
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft.AspNetCore": "Warning"
        }
    },
    "AllowedHosts": "*"
}
